<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<util:list id="accounts"
		value-type="com.epam.training.homework.gk.bank.account.Account">
	</util:list>

	<util:list id="users" value-type="com.epam.training.homework.gk.bank.user.User">

	</util:list>
	<util:list id="transfers"
		value-type="com.epam.training.homework.gk.bank.account.transfer.Transfer">
	</util:list>


	<bean id="dataStore"
		class="com.epam.training.homework.gk.bank.datastore.DataStoreOnDb">
		<constructor-arg ref="dbConnector" />
	</bean>


	<bean id="accountService"
		class="com.epam.training.homework.gk.bank.account.AccountServiceInMemory">
		<constructor-arg ref="dataStore" />
	</bean>


	<bean id="transferService"
		class="com.epam.training.homework.gk.bank.account.transfer.TransferServiceInMemory">
		<constructor-arg ref="dataStore" />
	</bean>

	<bean id="userService"
		class="com.epam.training.homework.gk.bank.user.UserServiceInMemory">
		<constructor-arg ref="dataStore" />
	</bean>

	<bean id="service" class="com.epam.training.homework.gk.bank.Services">
		<constructor-arg ref="accountService" />
		<constructor-arg ref="userService" />
		<constructor-arg ref="transferService" />
	</bean>

	<bean id="facade" class="com.epam.training.homework.gk.bank.facade.BankFacade">
		<constructor-arg ref="service" />
	</bean>

	<bean id="ui"
		class="com.epam.training.homework.gk.bank.ui.cli.CommandLineInterface">
		<constructor-arg ref="facade" />
	</bean>

	<bean id="dbConnector" class="com.epam.training.homework.gk.bank.jpa.DbConnector"></bean>


	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->
	<!--                             AOP                                                 -->

	<bean id="aopPersistence" class="com.epam.training.homework.gk.bank.aop.AopPersistence">
		<constructor-arg ref="dbConnector" />
	</bean>

	<bean id="aopPersistenceAccount"
		class="com.epam.training.homework.gk.bank.aop.AopPersistenceAccount">
		<constructor-arg ref="dbConnector" />
	</bean>

	<bean id="aopPersistenceUser"
		class="com.epam.training.homework.gk.bank.aop.AopPersistenceUser">
		<constructor-arg ref="dbConnector" />
	</bean>
	<bean id="aopPersistenceTransfer"
		class="com.epam.training.homework.gk.bank.aop.AopPersistenceTransfer">
		<constructor-arg ref="dbConnector" />
	</bean>
	<bean id="logger" class="com.epam.training.homework.gk.bank.aop.AopLogger">
	</bean>

	<aop:config>

		<aop:aspect id="persistenceCreate" ref="aopPersistence">
			<aop:pointcut expression="execution(* *.delete(..))" id="deleteAround" />
			<aop:around method="markDelete" pointcut-ref="deleteAround" />
		</aop:aspect>

		<aop:aspect id="persistenceCreate" ref="aopPersistence">
			<aop:pointcut expression="execution(* *.create(..))" id="createAround" />
			<aop:around method="saveCreated" pointcut-ref="createAround" />
		</aop:aspect>

		<aop:aspect id="persistenceAssign" ref="aopPersistence">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.user.UserServiceInMemory.addAccountToUser(..))"
				id="addAccountToUser" />
			<aop:around method="update" pointcut-ref="addAccountToUser" />
		</aop:aspect>

		<aop:aspect id="getAccountById" ref="aopPersistenceAccount">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.account.AccountServiceInMemory.getById(..))"
				id="getAccountById" />
			<aop:around method="getAccountById" pointcut-ref="getAccountById" />
		</aop:aspect>


		<aop:aspect id="getAccounts" ref="aopPersistenceAccount">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.account.AccountServiceInMemory.getAll())"
				id="getAccounts" />
			<aop:around method="getAccounts" pointcut-ref="getAccounts" />
		</aop:aspect>

		<aop:aspect id="getUserById" ref="aopPersistenceUser">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.user.UserServiceInMemory.getById(..))"
				id="getById" />
			<aop:around method="getUserById" pointcut-ref="getById" />
		</aop:aspect>

		<aop:aspect id="getUsers" ref="aopPersistenceUser">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.user.UserServiceInMemory.getAll())"
				id="getUsers" />
			<aop:around method="getUsers" pointcut-ref="getUsers" />
		</aop:aspect>

		<aop:aspect id="getUserByName" ref="aopPersistenceUser">
			<aop:pointcut
				expression="execution(* com.epam.training.homework.gk.bank.user.UserServiceInMemory.findByName(..))"
				id="getUserByName" />
			<aop:around method="findByName" pointcut-ref="getUserByName" />
		</aop:aspect>

		<aop:aspect id="doIt" ref="aopPersistenceTransfer">
			<aop:pointcut expression="execution(* *TransferServiceInMemory.doIt())"
				id="doIt" />
			<aop:after method="updateTransfer" pointcut-ref="doIt" />
		</aop:aspect>

		<aop:aspect id="getTransfers" ref="aopPersistenceTransfer">
			<aop:pointcut expression="execution(* *TransferServiceInMemory.getAll())"
				id="getTransfers" />
			<aop:around method="getTransfers" pointcut-ref="getTransfers" />
		</aop:aspect>
		
		
		
		
		<aop:aspect id="start" ref="logger">
			<aop:pointcut expression="execution(* *.AopPersistence*.*(..))"
				id="start" />

			<aop:before method="startAopPersistence" pointcut-ref="start" />
		</aop:aspect>

		<aop:aspect id="stop" ref="logger">
			<aop:pointcut expression="execution(* *.AopPersistence*.*(..))"
				id="stop" />
			<aop:after method="stopAopPersistence" pointcut-ref="stop" />
		</aop:aspect>
	</aop:config>

</beans>
